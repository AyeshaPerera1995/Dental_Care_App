<!DOCTYPE html>
<html lang="en">
	<!--begin::Head-->
	<head><base href="../../../">
		<meta charset="utf-8" />
		<title><%=sub_title%></title>
		<meta name="description" content="User datatable listing" />
		<meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />
		<!--begin::Fonts-->
		<link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Poppins:300,400,500,600,700" />
		<!--end::Fonts-->
		<!--begin::Global Theme Styles(used by all pages)-->
		<link href="assets/plugins/global/plugins.bundle.css" rel="stylesheet" type="text/css" />
		<link href="assets/plugins/custom/prismjs/prismjs.bundle.css" rel="stylesheet" type="text/css" />
		<link href="assets/css/style.bundle.css" rel="stylesheet" type="text/css" />

		<link rel="shortcut icon" href="assets/media/logos/favicon.ico" />

<style>
.aside-secondary-enabled.aside-fixed .wrapper {
	padding-left: 0;
}
.aside-secondary-enabled .aside {
	width: 0;
}	
/* .gutter-b {
	margin-bottom: 0;
} */

.table th, .table td {
    padding: 0.75rem 0.75rem 0.75rem 0;
    /* padding: 0.75rem; */
}




html, body {
    height: 100%;
}

*, *::after, *::before {
  box-sizing: border-box;
}

button {
  background: none;
  appearance: none;
  -webkit-appearance: none;
  -ms-appearance: none;
  -moz-appearance: none;
  border: none;
  cursor: pointer;
}

.page-btn {
  background: transparent;
  color: rgb(138, 135, 135);
  height: 30px;
  border-radius: 8px;
  padding: 0 10px;
  text-transform: uppercase;
  letter-spacing: 0.1em;
  transition: background 0.3s ease;
  margin: 0 2px
}

.page-btn:first-of-type {
  margin-left: 0;
}

.page-btn:last-of-type {
  margin-right: 0;
}

.page-btn:not([class$="-page"]) {
  width: 30px;
}

.pagination-buttons {
  display: flex;
  align-items: center;
}

.page-btn[class*="-page"] {
  background: rgb(218, 216, 216);
  font-size: 0.6em;
  font-weight: 700;
}

.page-btn.active {
  background:#e61794;
  color: #fff;
}

.page-btn[disabled] {
  opacity: 0.3;
}

.page-btn:hover{
  background:#f163b8;
  color: #fff;
}
</style>

	</head>
	<!--end::Head-->
	<!--begin::Body-->
	<body id="kt_body" class="header-mobile-fixed subheader-enabled aside-enabled aside-fixed aside-secondary-enabled page-loading">
		<!--begin::Main-->
		<!-- MOBILE HEADER -->
		<%- include('includes/mobile_header.ejs'); %>

		<div class="d-flex flex-column flex-root">
			<!--begin::Page-->
			<div class="d-flex flex-row flex-column-fluid page">

                <!-- NAV BAR  -->
                <%- include('includes/navbar.ejs'); %>

				<!--begin::Wrapper-->
				<div class="d-flex flex-column flex-row-fluid wrapper" id="kt_wrapper">
					<!--begin::Content-->
					<div class="content d-flex flex-column flex-column-fluid" id="kt_content">

                        <!--begin::Subheader-->
						<div class="subheader py-3 py-lg-8 subheader-transparent" id="kt_subheader">
							<div class="container d-flex align-items-center justify-content-between flex-wrap flex-sm-nowrap">
							
								<!-- HEADER  -->
								<%- include('includes/header.ejs'); %>

							</div>
						</div>
						<!--end::Subheader-->

						<!--begin::Entry-->
						<div class="d-flex flex-column-fluid">
							<!--begin::Container-->
							<div class="container">

								<!-- <%- include ("includes/messages"); %> -->

								<!--begin::Card-->
								<div class="card card-custom">
									<!--begin::Header-->
									<div class="card-header flex-wrap border-0 pt-6 pb-0">
										<div class="card-title align-items-start flex-column">
											<span class="text-muted font-weight-bold"><%=sub_title%></span>
									   </div>
										<div class="card-toolbar">
										
											<!--begin::Button-->
											<a href="/patients/add_patient" class="btn btn-primary font-weight-bolder">
												<span class="svg-icon svg-icon-md">
													<!--begin::Svg Icon | path:assets/media/svg/icons/Communication/Mail-attachment.svg-->
													<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="24px" height="24px" viewBox="0 0 24 24" version="1.1">
														<g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
															<polygon points="0 0 24 0 24 24 0 24" />
															<path d="M18,8 L16,8 C15.4477153,8 15,7.55228475 15,7 C15,6.44771525 15.4477153,6 16,6 L18,6 L18,4 C18,3.44771525 18.4477153,3 19,3 C19.5522847,3 20,3.44771525 20,4 L20,6 L22,6 C22.5522847,6 23,6.44771525 23,7 C23,7.55228475 22.5522847,8 22,8 L20,8 L20,10 C20,10.5522847 19.5522847,11 19,11 C18.4477153,11 18,10.5522847 18,10 L18,8 Z M9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 Z" fill="#000000" fill-rule="nonzero" opacity="0.3" />
															<path d="M0.00065168429,20.1992055 C0.388258525,15.4265159 4.26191235,13 8.98334134,13 C13.7712164,13 17.7048837,15.2931929 17.9979143,20.2 C18.0095879,20.3954741 17.9979143,21 17.2466999,21 C13.541124,21 8.03472472,21 0.727502227,21 C0.476712155,21 -0.0204617505,20.45918 0.00065168429,20.1992055 Z" fill="#000000" fill-rule="nonzero" />
														</g>
													</svg>
													<!--end::Svg Icon-->
												</span>New Patient</a>
											<!--end::Button-->
										</div>
									</div>
									<!--end::Header-->
									<div class="card-body">
                    <table class="table table-separate table-head-custom table-checkable" id="drugTable">
											<thead>
												<tr>
                          <th>Record ID</th>
                          <th>Patient</th>
													<th>Type</th>
                          <th>NIC</th>
													<th>Gender</th>
                          <th>Phone</th>
													<th>Action</th>
												</tr>
											</thead>
											<tbody id="dataholder">

											</tbody>
										</table>
										<div class="pagination-buttons">

                    </div>
									</div>
													
								</div>
								<!--end::Card-->
							</div>
							<!--end::Container-->
						</div>
						<!--end::Entry-->
					</div>
					<!--end::Content-->
					
				</div>
				<!--end::Wrapper-->
			</div>
			<!--end::Page-->
		</div>
		<!--end::Main-->
		
		<!--begin::Scrolltop-->
		<div id="kt_scrolltop" class="scrolltop">
			<span class="svg-icon">
				<!--begin::Svg Icon | path:assets/media/svg/icons/Navigation/Up-2.svg-->
				<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="24px" height="24px" viewBox="0 0 24 24" version="1.1">
					<g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
						<polygon points="0 0 24 0 24 24 0 24" />
						<rect fill="#000000" opacity="0.3" x="11" y="10" width="2" height="10" rx="1" />
						<path d="M6.70710678,12.7071068 C6.31658249,13.0976311 5.68341751,13.0976311 5.29289322,12.7071068 C4.90236893,12.3165825 4.90236893,11.6834175 5.29289322,11.2928932 L11.2928932,5.29289322 C11.6714722,4.91431428 12.2810586,4.90106866 12.6757246,5.26284586 L18.6757246,10.7628459 C19.0828436,11.1360383 19.1103465,11.7686056 18.7371541,12.1757246 C18.3639617,12.5828436 17.7313944,12.6103465 17.3242754,12.2371541 L12.0300757,7.38413782 L6.70710678,12.7071068 Z" fill="#000000" fill-rule="nonzero" />
					</g>
				</svg>
				<!--end::Svg Icon-->
			</span>
		</div>
		<!--end::Scrolltop-->

		<!-- <script>var HOST_URL = "https://preview.keenthemes.com/metronic/theme/html/tools/preview";</script> -->
		<!--begin::Global Config(global config for global JS scripts)-->
		<script>var KTAppSettings = { "breakpoints": { "sm": 576, "md": 768, "lg": 992, "xl": 1200, "xxl": 1200 }, "colors": { "theme": { "base": { "white": "#ffffff", "primary": "#1BC5BD", "secondary": "#E5EAEE", "success": "#1BC5BD", "info": "#6993FF", "warning": "#FFA800", "danger": "#e61794", "light": "#F3F6F9", "dark": "#212121" }, "light": { "white": "#ffffff", "primary": "#1BC5BD", "secondary": "#ECF0F3", "success": "#C9F7F5", "info": "#E1E9FF", "warning": "#FFF4DE", "danger": "#FFE2E5", "light": "#F3F6F9", "dark": "#D6D6E0" }, "inverse": { "white": "#ffffff", "primary": "#ffffff", "secondary": "#212121", "success": "#ffffff", "info": "#ffffff", "warning": "#ffffff", "danger": "#ffffff", "light": "#464E5F", "dark": "#ffffff" } }, "gray": { "gray-100": "#F3F6F9", "gray-200": "#ECF0F3", "gray-300": "#E5EAEE", "gray-400": "#D6D6E0", "gray-500": "#B5B5C3", "gray-600": "#80808F", "gray-700": "#464E5F", "gray-800": "#1B283F", "gray-900": "#212121" } }, "font-family": "Poppins" };</script>
		<!--end::Global Config-->
		<!--begin::Global Theme Bundle(used by all pages)-->
		<script src="assets/plugins/global/plugins.bundle.js"></script>
		<script src="assets/plugins/custom/prismjs/prismjs.bundle.js"></script>
		<script src="assets/js/scripts.bundle.js"></script>
		<!--end::Page Scripts-->

<script>

window.onload = function() {
//  alert("let's go!");
//  loadPatients(0);
 getPageCount();
}


// ********************************************************************************************************
            const pageNumbers = (total, max, current) => {
              const half = Math.floor(max / 2);
              let to = max;
              
              if(current + half >= total) {
                to = total;
              } else if(current > half) {
                to = current + half ;
              }
              
              let from = to - max;
              console.log(Array.from({length: max}, (_, i) => (i + 1) + from));
              return Array.from({length: max}, (_, i) => (i + 1) + from);
            }
            
            console.log(
                pageNumbers(11,5,2)
            )
            
            function PaginationButton(totalPages, maxPagesVisible = 5, currentPage = 1) {
              let pages = pageNumbers(totalPages, maxPagesVisible, currentPage);
              let currentPageBtn = null;
              const buttons = new Map();
              const disabled = {
                start: () => pages[0] === 1,
                prev: () => currentPage === 1,
                end: () => pages.slice(-1)[0] === totalPages,
                next: () => currentPage === totalPages
              }
              const frag = document.createDocumentFragment();
              const paginationButtonContainer = document.createElement('div');
              paginationButtonContainer.className = 'pagination-buttons';
              paginationButtonContainer.style = 'margin-left:910px; padding-bottom: 30px;';

              //   default page loading 
              paginationButtonContainer.value = currentPage;
              loadPatients(currentPage-1);
              
              const createAndSetupButton = (label = '', cls = '', disabled = false, handleClick) => {
                const buttonElement = document.createElement('button');
                if (label == 'prev') {
                    buttonElement.innerHTML = '<i class="ki ki-arrow-back"></i>';  
                }
                else if (label == 'next') {
                    buttonElement.innerHTML = '<i class="ki ki-arrow-next"></i>';  
                }
                else if (label == 'start') {
                    buttonElement.innerHTML = '<i class="ki ki-double-arrow-back"></i>';  
                }
                else if (label == 'end') {
                    buttonElement.innerHTML = '<i class="ki ki-double-arrow-next"></i>';  
                }
                else{
                buttonElement.textContent = label;
                }

                buttonElement.className = `page-btn ${cls}`;
                buttonElement.disabled = disabled;
                buttonElement.addEventListener('click', e => {
                  handleClick(e);
                  this.update();
                  paginationButtonContainer.value = currentPage;
                  loadPatients(currentPage-1);
                  paginationButtonContainer.dispatchEvent(new Event('change'));
                });
                
                return buttonElement;
              }
              
              const onPageButtonClick = e => currentPage = Number(e.currentTarget.textContent);
              
              const onPageButtonUpdate = index => (btn) => {
                btn.textContent = pages[index];
                
                if(pages[index] === currentPage) {
                  currentPageBtn.classList.remove('active');
                  btn.classList.add('active');
                  currentPageBtn = btn;
                  currentPageBtn.focus();
                }
              };
              
              buttons.set(
                createAndSetupButton('start', 'start-page', disabled.start(), () => currentPage = 1),
                (btn) => btn.disabled = disabled.start()
              )
              
              buttons.set(
                createAndSetupButton('prev', 'prev-page', disabled.prev(), () => currentPage -= 1),
                (btn) => btn.disabled = disabled.prev()
              )
              
              pages.map((pageNumber, index) => {
                const isCurrentPage = currentPage === pageNumber;
                const button = createAndSetupButton(
                  pageNumber, isCurrentPage ? 'active' : '', false, onPageButtonClick
                );
                
                if(isCurrentPage) {
                  currentPageBtn = button;
                }
                
                buttons.set(button, onPageButtonUpdate(index));
              });
              
              buttons.set(
                createAndSetupButton('next', 'next-page', disabled.next(), () => currentPage += 1),
                (btn) => btn.disabled = disabled.next()
              )
              
              buttons.set(
                createAndSetupButton('end', 'end-page', disabled.end(), () => currentPage = totalPages),
                (btn) => btn.disabled = disabled.end()
              )
              
              buttons.forEach((_, btn) => frag.appendChild(btn));
              paginationButtonContainer.appendChild(frag);
              
              this.render = (container = document.body) => {
                container.appendChild(paginationButtonContainer);
              }
              
              this.update = (newPageNumber = currentPage) => {
                currentPage = newPageNumber;
                pages = pageNumbers(totalPages, maxPagesVisible, currentPage);
                buttons.forEach((updateButton, btn) => updateButton(btn));
              }
              
              this.onChange = (handler) => {
                paginationButtonContainer.addEventListener('change', handler);
              }
            }
            
// ********************************************************************************************************

function getPageCount(){
  // get patient count 
  $.ajax({
  url: 'http://nenotechnologies-001-site13.etempurl.com/api/patient/getallpatientList?page=0',
  type: 'GET',
  headers: {
      AccessToken: '<%= accessToken %>'
  }, 
      success: function(res) {
        var page_count = Math.ceil(res.patient_count/10);
        console.log('page_count '+page_count);
        if (page_count <= 5) {
          const paginationButtons = new PaginationButton(page_count, page_count);
          paginationButtons.render();
        }else{
          const paginationButtons = new PaginationButton(page_count, 5);
          paginationButtons.render();
        }

      }
  });

}


function loadPatients(page){
  console.log('in');
  var patienttext='';
  
  $.ajax({
  url: 'http://nenotechnologies-001-site13.etempurl.com/api/patient/getallpatientList?page='+page,
  type: 'GET',
  headers: {
      AccessToken: '<%= accessToken %>'
  }, 
      success: function(res) {
          console.log(res);
          console.log(res.data.length);
          var patientObjts = res.data;

          // set json data in ascending order ****************************************************
          // let sortedData = patientObjts.slice().sort((a, b) => a.id - b.id);
          // console.log(sortedData);

          patientObjts.forEach(patient => {

              if (patient.gender == 'Male' && patient.type == 'Child') {
						  	var img = 'assets/media/svg/avatars/001-boy.svg';
						  }else if (patient.gender == 'Female' && patient.type == 'Child') {
						  	var img = 'assets/media/svg/avatars/018-girl-9.svg';
						  }else if(patient.gender == 'Male' && patient.type == 'Adult'){
                var color = 'style="background-color: rgb(218, 216, 216); padding-left:10px;"';
                var img = 'assets/media/svg/avatars/034-boy-14.svg';
              }else if(patient.gender == 'Female' && patient.type == 'Adult'){
                var color = 'style="background-color: rgb(218, 216, 216); padding-left:10px;"';
                var img = 'assets/media/svg/avatars/039-girl-21.svg';
              }else{
								var img = 'assets/media/users/default.jpg';
							}

              if (patient.status == 'Auto') {
                var age = '';
              }else{
                var dob = patient.dob;
						    var age = new Date().getFullYear() - dob.split('-')[0]+' years old';
              }

              patienttext = patienttext +
              '<tr '+color+'>'+
              '<td class="pl-0 py-5">'+
							'<span class="text-dark-75 font-weight-bolder d-block font-size">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'+patient.id+'</span>'+
							'</td>'+
							'<td class="pl-0 py-5">'+
							'<div class="d-flex align-items-center">'+
							'<div class="symbol symbol-50 symbol-light mr-4">'+
							'<span class="symbol-label">'+
							'<img src="'+img+'" class="h-75 align-self-end" alt="">'+
							'</span>'+
							'</div>'+
						  '<div>'+
							'<a href="#" class="text-dark-75 font-weight-bolder text-hover-primary mb-1 font-size-lg">'+patient.name+'</a>'+
							'<span class="text-muted font-weight-bold d-block">'+age+'</span>'+
							'</div>'+
							'</div>'+
							'</td>'+
							'<td class="pl-0 py-5">'+
							'<span class="font-weight-bold">'+patient.type+'</span>'+
							'</td>'+
							'<td class="pl-0 py-5">'+
							'<span class="font-weight-bold">'+patient.nic+'</span>'+
							'</td>'+
							'<td class="pl-0 py-5">'+
							'<span class="font-weight-bold">'+patient.gender+'</span>'+
							'</td>'+
              '<td class="pl-0 py-5">'+
							'<span class="font-weight-bold d-block">'+patient.contact_number+'</span>'+
							'</td>'+
							'<td class="pl-0 py-5">'+

              //Edit
              '<a href="/patients/edit_patient/'+patient.id+'" class="btn btn-sm btn-clean btn-icon mr-2" data-toggle="tooltip" data-placement="top" data-container="body" data-boundary="window" title="Edit">'+	                            
							'<span class="svg-icon svg-icon-md">'+                                
							'<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="24px" height="24px" viewBox="0 0 24 24" version="1.1">'+	                                    
							'<g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">'+                                        
							'<rect x="0" y="0" width="24" height="24"></rect>'+                                        
							'<path d="M8,17.9148182 L8,5.96685884 C8,5.56391781 8.16211443,5.17792052 8.44982609,4.89581508 L10.965708,2.42895648 C11.5426798,1.86322723 12.4640974,1.85620921 13.0496196,2.41308426 L15.5337377,4.77566479 C15.8314604,5.0588212 16,5.45170806 16,5.86258077 L16,17.9148182 C16,18.7432453 15.3284271,19.4148182 14.5,19.4148182 L9.5,19.4148182 C8.67157288,19.4148182 8,18.7432453 8,17.9148182 Z" fill="#000000" fill-rule="nonzero" transform="translate(12.000000, 10.707409) rotate(-135.000000) translate(-12.000000, -10.707409) "></path>	'+                                        
							'<rect fill="#000000" opacity="0.3" x="5" y="20" width="15" height="2" rx="1"></rect>	'+                                    
							'</g>'+	                                
							'</svg>'+                           
							'</span>'+	                        
							'</a>'+

              //Remove
              // '<a style="margin-bottom:5px;" href="/patients/delete_patient/'+patient.id+'" class="btn btn-sm btn-clean btn-icon mr-2" data-toggle="tooltip" data-placement="top" data-container="body" data-boundary="window" title="Remove">'+ 	                            
							// '<span class="svg-icon svg-icon-md">	'+                                 
							// '<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="24px" height="24px" viewBox="0 0 24 24" version="1.1">	'+                                     
							// '<g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">	   '+                                      
							// '<rect x="0" y="0" width="24" height="24"></rect>	'+                                         
							// '<path d="M6,8 L6,20.5 C6,21.3284271 6.67157288,22 7.5,22 L16.5,22 C17.3284271,22 18,21.3284271 18,20.5 L18,8 L6,8 Z" fill="#000000" fill-rule="nonzero"></path>	'+                                         
							// '<path d="M14,4.5 L14,4 C14,3.44771525 13.5522847,3 13,3 L11,3 C10.4477153,3 10,3.44771525 10,4 L10,4.5 L5.5,4.5 C5.22385763,4.5 5,4.72385763 5,5 L5,5.5 C5,5.77614237 5.22385763,6 5.5,6 L18.5,6 C18.7761424,6 19,5.77614237 19,5.5 L19,5 C19,4.72385763 18.7761424,4.5 18.5,4.5 L14,4.5 Z" fill="#000000" opacity="0.3"></path>	 '+                                    
							// '</g>'+ 	                                
							// '</svg>	 '+                             
							// '</span>'+ 	                        
							// '</a>'+ 

							'</td>'+
							'</tr>'
              ;

          });
        
          document.getElementById('dataholder').innerHTML=patienttext;
      }
  });

}
    </script>

    <!--Sweetalert-->
		<script src="assets/sweetalert/sweetalert2.all.min.js"></script>
		<script>
			$(document).ready(function() {
				var success_msg = "<%=success_msg%>";
				var error_msg = "<%=error_msg%>";

				  if (error_msg != "") {			
              swal({
                  type: 'error',
                  title: 'Error',
                  text: error_msg,
					        timer: 2500,
					        showConfirmButton: false,
              });
        		}else if(success_msg != ""){
					    swal({
                    type: 'success',
                    title: 'Updated',
                    text: success_msg,
                    showConfirmButton: true,
					          confirmButtonColor: '#eb5bb1',
					    });
					
				    }
				
			});
		</script>

	</body>
	<!--end::Body-->
</html>
